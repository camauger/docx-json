[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "docx-json"
version = "1.0.1"
description = "Convertit des fichiers DOCX en JSON ou HTML"
authors = [
    {name = "Développeur TÉLUQ", email = "dev@teluq.ca"}
]
readme = "README.md"
requires-python = ">=3.7"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "python-docx>=0.8.10",
    "tqdm>=4.66.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.4.0",
    "flake8>=6.0.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "pre-commit>=3.3.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
]

[project.urls]
"Bug Tracker" = "https://github.com/teluq/docx-json/issues"

[project.scripts]
docx-json = "docx_json.__main__:main"

[tool.setuptools.packages.find]
include = ["docx_json", "docx_json.*"]

[tool.black]
line-length = 88
target-version = ["py36", "py37", "py38", "py39"]

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=docx_json",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
]

[tool.coverage.run]
source = ["docx_json"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
    "\\.\\.\\.",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true
exclude = [
    "^build/",
    "^dist/",
    "^\\.venv/",
    "^venv/",
]

# Gradually enable stricter checking for core modules
[[tool.mypy.overrides]]
module = "docx_json.models.*"
disallow_untyped_defs = true
warn_return_any = true

[[tool.mypy.overrides]]
module = "docx_json.exceptions"
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "docx_json.utils.logging"
disallow_untyped_defs = true

# Ignore vendored or problematic modules
[[tool.mypy.overrides]]
module = "docx.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tqdm.*"
ignore_missing_imports = true